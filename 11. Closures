//1. Написать функцию, которая ничего не возвращает и принимает только один клоужер, который ничего не принимает и ничего не возвращает. Функция должна просто посчитать от 1 до 10 в цикле и после этого вызвать клоужер. Добавьте print в каждый виток цикла и в клоужер и проследите за очередностью выполнения команд.
func exOne(_ closure: () -> ()) {
    var sum = 0
    for i in 1...10 {
        sum += i
        print(sum)
    }
    closure()
}

exOne() {
    print("closure calling\n")
}


//2. Используя метод массивов sorted, отсортируйте массив интов по возрастанию и убыванию. Пример показан в методичке.
let newArr = [5, 1, 3, 99, 55, 109, 14, 3, 6]
newArr.sorted() // по возрастанию
newArr.sorted(by: >) // по убыванию


//3. Напишите функцию, которая принимает массив интов и клоужер и возвращает инт. Клоужер должен принимать 2 инта (один опшинал) и возвращать да или нет. В самой функции создайте опшинал переменную. Вы должны пройтись в цикле по массиву интов и сравнивать элементы с переменной используя клоужер. Если клоужер возвращает да, то вы записываете значение массива в переменную. в конце функции возвращайте переменную. Используя этот метод и этот клоужер найдите максимальный и минимальный элементы массива.
func exThree(_ arr: [Int], _ clos: (Int?, Int) -> Bool) -> Int {
    var a: Int?
    for i in arr {
        if clos(a, i) {
            a = i
        }
    }
    return a!
    }

let arrThree = [5, 2, 9, 14, 12, 215, 60, 1, 4]
let minOfArr = exThree(arrThree, {$0 != nil ? $0! > $1 : true})
let maxOfArr = exThree(arrThree, {$0 != nil ? $0! < $1 : true})
print("Maximum is \(maxOfArr), minimum is \(minOfArr)")


//4. Создайте произвольную строку. Преобразуйте ее в массив букв. Используя метод массивов sorted отсортируйте строку так, чтобы в начале шли гласные в алфавитном порядке, потом согласные, потом цифры, а потом символы
let string = "hgawrtyw463.345se!g2?offu"
var arrString = [Character]()
for i in string {
    arrString.append(i)
}

arrString

let arrAlph : [Character] = ["a", "e", "i", "o", "u", "y", "b", "c", "d", "f", "g", "h", "j", "k", "l", "m", "n", "p", "q", "r", "s", "t", "v", "w", "x", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9"]

let arrSorted = arrString.sorted(by: { (s1: Character, s2: Character) -> Bool in
    let a = arrAlph.firstIndex(of: s1)
    let b = arrAlph.firstIndex(of: s2)

    switch a {
    case nil:
        return false
    default:
        if b == nil {
            return true
        } else {
            return a! < b!
        }
    }
} )
print("\n\(arrSorted)\n")


//5. Проделайте задание №3 но для нахождения минимальной и максимальной буквы из массива букв (соответственно скалярному значению)
let arrFive : [Character] = ["c", "e", "b", "o", "x", "u", "k"]

func exFive(_ arr: [Character], _ clos: (Character?, Character) -> Bool) -> Character {
var a: Character?
for i in arr {
    if clos(a, i) {
        a = i
    }
}
return a!
}

let minElement = exFive(arrFive, {$0 != nil ? $0! > $1 : true})
let maxElement = exFive(arrFive, {$0 != nil ? $0! < $1 : true})
print("First of letters: \(minElement), last of letters: \(maxElement)")
